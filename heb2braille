#!/home/ccsoft/perls/cm/perl -CS


#see
#https://en.wikipedia.org/wiki/Braille_ASCII

# "Unicode includes a means for encoding eight-dot Braille; however, Braille ASCII continues to be the preferred format for encoding six-dot Braille."


use v5.12;
use utf8;
use JSON;
use LWP::Simple;
use Data::Dumper;
use Getopt::Long;
use lib qw(.);
use H2BEncoder qw(braille2BrailleAscii heb2BrailleUnicode); 
use common::sense;

my $printHebrew =0;
my $printBrailleUnicode =0;
my $printBrailleAscii =0;
my $highlightTaamim =0;
my $readStdin =0;
GetOptions("print-hebrew|w" => \$printHebrew,
	   "print-braille-unicode|u" => \$printBrailleUnicode,
	   "print-braille-ascii|a" => \$printBrailleAscii,
	   "highlight-taamim|t" => \$highlightTaamim,
	   "stdin|s" => \$readStdin,
	   );


if( $readStdin){
    while(<>){
	chomp;
	emitLine($_);
    }
}
else{
    #https://www.sefaria.org.il/api/texts/Exodus.10.1-11?commentary=0&context=1&pad=0&wrapLinks=1
    my $spec = $ARGV[0] || 'Exodus.10.1-11' ;
    #grab data from sefaria;
    my $url = "https://www.sefaria.org.il/api/texts/${spec}?commentary=0&context=1&pad=0&wrapLinks=1";
    my $json = qx(curl -s $url) or die "failed to get $url";
    my $obj = decode_json($json);
    
    my @lines = @{$obj->{he}};
    for my $line(@lines){
	emitLine($line);
    }
}

exit 0;
sub emitLine{    
    my $line = shift;

    say $line if $printHebrew;

    my $p1Pure = heb2BrailleUnicode($line);

    
    my $p1 = heb2BrailleUnicode($line, highlightTaamim => $highlightTaamim);
    say $p1 if $printBrailleUnicode;
    
    my $p2 = braille2BrailleAscii($p1Pure);
    say $p2 if $printBrailleAscii;

    
}
